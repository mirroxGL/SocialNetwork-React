{"version":3,"file":"static/js/289.e83d6c31.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.js","webpack://react-ez-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://react-ez-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-ez-1/./src/components/Profile/ProfileInfo/MyProfileInfo/MyProfileInfoStatus/MyProfileInfoStatus.module.css?1351","components/Profile/ProfileInfo/MyProfileInfo/MyProfileInfoStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/MyProfileInfo/MyProfileInfoStatus/MyProfileInfoStatus.jsx","webpack://react-ez-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\nconst withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n\r\n         if (!this.props.isAuth) {\r\n            return <Navigate to={\"/login\"} />\r\n         }\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n\r\n\r\n   let ConnectedAuthRedirectContainer = connect(mapStateToPropsForRedirect, null)(RedirectComponent)\r\n\r\n   return ConnectedAuthRedirectContainer\r\n\r\n}\r\n\r\nexport default withAuthRedirect","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__CT+s6\",\"post_img\":\"Post_post_img__W78YB\"};","import React from \"react\"\r\nimport p from \"./Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n   return (\r\n      <div className={p.post}>\r\n         <div className={p.post_img}><img src=\"https://images.assetsdelivery.com/compings_v2/triken/triken1608/triken160800029.jpg\" alt=\"\" /></div>\r\n         <div className={p.post_content}>{props.message}</div>\r\n         <div>Like</div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Post","// extracted by mini-css-extract-plugin\nexport default {\"content_posts\":\"MyPosts_content_posts__BM7po\",\"addPostBtn\":\"MyPosts_addPostBtn__vlSzT\",\"addPostInput\":\"MyPosts_addPostInput__ri0bL\",\"myPostsTitle\":\"MyPosts_myPostsTitle__qoHDh\",\"myPosts\":\"MyPosts_myPosts__ZewjP\",\"addPostForm\":\"MyPosts_addPostForm__8PiGK\",\"form-label\":\"MyPosts_form-label__39ykD\"};","\r\n\r\nimport React from 'react'\r\nimport Post from './Post/Post';\r\nimport p from \"./MyPosts.module.css\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { required, maxLengthCreator } from \"../../../util/validators/validators.js\"\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst MyPostsForm = (props) => {\r\n\r\n   return <div>\r\n      <form onSubmit={props.handleSubmit} className={p.addPostForm}>\r\n         <div>\r\n            <Field component={Textarea} placeholder=\"Your Message\" name='text' className={p.addPostInput} />\r\n         </div>\r\n         <div>\r\n            <button className={p.addPostBtn}>Post</button>\r\n         </div>\r\n      </form>\r\n   </div>\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({\r\n   form: \"posts\"\r\n})(MyPostsForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n\r\n   let postsElements = props.posts.map((post, i) => <Post profile={props.profile} key={i} message={post.message} likesCount={props.likesCount} likePost={props.likePost} />)\r\n\r\n   let AddPost = (text) => {\r\n      props.addPost(text)\r\n   }\r\n   const handleSubmit = (inputData) => {\r\n      AddPost(inputData.text)\r\n\r\n   }\r\n\r\n   return (\r\n\r\n      <div >\r\n         <div className={p.content_posts}>\r\n            <h2 className={p.myPostsTitle}>My posts</h2>\r\n            {props.isOwner && <MyPostsReduxForm onSubmit={handleSubmit} posts={props.posts} />}\r\n\r\n            <br />\r\n            <div className={p.myPosts}>{postsElements}</div>\r\n\r\n         </div>\r\n      </div >\r\n   )\r\n})\r\n\r\nexport default MyPosts","import MyPosts from \"./MyPosts.jsx\";\r\nimport { addPostActionCreator, likePost, resetMessageActionCreator } from \"../../../redux/profile-reducer.js\";\r\nimport { connect } from 'react-redux'\r\nimport { reset } from 'redux-form';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      profileData: state.profile.profileData,\r\n      posts: state.profile.postsData,\r\n      profile: state.profile.profile,\r\n\r\n   }\r\n\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (text) => {\r\n         dispatch(addPostActionCreator(text))\r\n         dispatch(reset('posts'))\r\n\r\n      },\r\n\r\n   }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"status_text\":\"MyProfileInfoStatus_status_text__i-JcI\",\"status_textInput\":\"MyProfileInfoStatus_status_textInput__ldWus\"};","import React, { useEffect, useState } from \"react\";\r\nimport { setStatus } from \"../../../../../redux/profile-reducer\";\r\nimport s from \"./MyProfileInfoStatus.module.css\"\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n   let stateWithHooks = useState(false)\r\n\r\n   let [editMode, setEditMode] = stateWithHooks\r\n   let [status, setStatus] = useState(props.status)\r\n\r\n   useEffect(() => {\r\n      setStatus(props.status)\r\n   }, [props.status])\r\n\r\n   let activateEditMode = () => {\r\n      if (props.isOwner) {\r\n         setEditMode(true)\r\n      }\r\n\r\n   }\r\n   let deactivateEditMode = () => {\r\n      setEditMode(false)\r\n      props.updateStatus(status)\r\n   }\r\n\r\n   let onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value)\r\n   }\r\n\r\n   return <div className={s.status}>\r\n      {editMode &&\r\n         <div onBlur={deactivateEditMode} className={s.status_input}>\r\n            <input onChange={onStatusChange} className={s.status_textInput} value={status} autoFocus={true} type=\"text\" />\r\n\r\n         </div>}\r\n      {!editMode &&\r\n         <div onDoubleClick={activateEditMode} className={s.status_text}><span>{props.status || \"------\"}</span></div>}\r\n\r\n   </div>\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport s from \"./MyProfileInfoStatus.module.css\"\r\n\r\n\r\n\r\nclass MyProfileInfoStatus extends React.Component {\r\n   userId = this.props.userId\r\n\r\n   state = {\r\n      editMode: false,\r\n      status: this.props.status\r\n\r\n   }\r\n   toggleEditMode = () => {\r\n\r\n      if (this.userId == 25081) return { editMode: true }\r\n      else return { editMode: false }\r\n   }\r\n   activateEditMode = () => {\r\n      this.setState(this.toggleEditMode)\r\n   }\r\n\r\n   deactivateEditMode = () => {\r\n      this.setState({\r\n         editMode: false\r\n      })\r\n      this.props.updateStatus(this.state.status)\r\n   }\r\n\r\n   onStatusChange = (e) => {\r\n      this.setState({\r\n         status: e.currentTarget.value\r\n      })\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState) {\r\n      if (prevProps.status !== this.props.status) {\r\n         this.setState({\r\n            status: this.props.status\r\n         })\r\n      }\r\n\r\n\r\n   }\r\n\r\n   render() {\r\n      return <div className={s.status}>\r\n         {this.state.editMode &&\r\n            <div className={s.status_input}>\r\n               <span onBlur={this.deactivateEditMode}><input onChange={this.onStatusChange} autoFocus={true} value={this.state.status} type=\"text\" /></span>\r\n            </div>}\r\n         {!this.state.editMode &&\r\n            <div className={s.status_text}><span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span></div>}\r\n\r\n      </div>\r\n   }\r\n}\r\n\r\nexport default MyProfileInfoStatus","// extracted by mini-css-extract-plugin\nexport default {\"profile_banner__img\":\"ProfileInfo_profile_banner__img__XgpPZ\",\"profile\":\"ProfileInfo_profile__IpKHk\",\"avatarBlock\":\"ProfileInfo_avatarBlock__1d0-Q\",\"profileInfoBlock\":\"ProfileInfo_profileInfoBlock__ql7i3\",\"profile__img\":\"ProfileInfo_profile__img__O14XL\",\"profile_info__name\":\"ProfileInfo_profile_info__name__r61k9\",\"profile_info\":\"ProfileInfo_profile_info__3udvm\",\"profile_info__description\":\"ProfileInfo_profile_info__description__C7dLO\",\"uploadAvatarLabel\":\"ProfileInfo_uploadAvatarLabel__uQ-Ea\",\"uploadAvatar\":\"ProfileInfo_uploadAvatar__dH05+\",\"contacts_item\":\"ProfileInfo_contacts_item__LePEV\",\"editInfoBtn\":\"ProfileInfo_editInfoBtn__RRQqc\",\"saveInfoBtn\":\"ProfileInfo_saveInfoBtn__iI4En\",\"editNameFlex\":\"ProfileInfo_editNameFlex__NvIf5\",\"additionlaInfo_item\":\"ProfileInfo_additionlaInfo_item__Gz7ot\",\"fullNameLabel\":\"ProfileInfo_fullNameLabel__w3-YF\",\"checkboxInput\":\"ProfileInfo_checkboxInput__quaRu\",\"aboutMeInputs\":\"ProfileInfo_aboutMeInputs__E0Jc9\"};","import { reduxForm } from \"redux-form\"\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\"\r\nimport ProfileStatusWithHooks from \"./MyProfileInfo/MyProfileInfoStatus/ProfileStatusWithHooks\"\r\nimport { Contact } from \"./ProfileInfo\"\r\nimport p from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileDataForm = (props) => {\r\n   return <form onSubmit={props.handleSubmit} className={p.profileInfoBlock}>\r\n      <div className={p.profile_info}>\r\n         <div className={p.editNameFlex}>\r\n            <div className={p.profile_info__name}><div className={p.fullNameLabel}>{createField(\"Full name\", \"fullName\", [], Input)}</div></div>\r\n            {props.isOwner && <button type=\"submit\" className={p.saveInfoBtn} >Save</button>}\r\n         </div>\r\n\r\n\r\n         <div><b>Status:</b><ProfileStatusWithHooks isOwner={props.isOwner} status={props.status} updateStatus={props.updateStatus} userId={props.profile.userId} /></div>\r\n\r\n\r\n\r\n         <b>Looking for a job:</b><div className={p.checkboxInput}>{createField(\"Looking for a job\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}</div>\r\n         <br />\r\n         <b>My professional skills:</b><div className={p.aboutMeInputs}>{createField(\"My professional skills...\", \"lookingForAJobDescription\", [], Textarea)}</div>\r\n         <br />\r\n         <b>About Me:</b><div className={p.aboutMeInputs}>{createField(\"About me...\", \"aboutMe\", [], Textarea)}</div>\r\n         {/* <b>Contacts:</b>{Object.keys(props.profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={createField(\"Type here...\", \"contacts\", [], Input)} />\r\n\r\n         })} */}\r\n      </div>\r\n\r\n   </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: \"edit-profile\" })(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataReduxForm","import { useState } from \"react\"\r\nimport Preloader from \"../../common/Preloader/Preloader\"\r\nimport MyProfileInfoStatus from \"./MyProfileInfo/MyProfileInfoStatus/MyProfileInfoStatus\"\r\nimport ProfileStatusWithHooks from \"./MyProfileInfo/MyProfileInfoStatus/ProfileStatusWithHooks\"\r\nimport ProfileDataForm from \"./ProfileDataForm\"\r\nimport p from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileInfo = (props) => {\r\n   let [editMode, setEditMode] = useState(false)\r\n   let profileData = props.profileData\r\n\r\n   if (!props.profile) {\r\n      return <Preloader className={p.preloader} />\r\n   }\r\n   const onMainPhotoSelected = (e) => {\r\n      if (e.target.files.length) {\r\n         props.savePhoto(e.target.files[0])\r\n      }\r\n\r\n\r\n   }\r\n\r\n   const onSubmit = (formData) => {\r\n      console.log(formData);\r\n      props.saveProfile(formData)\r\n      setEditMode(false)\r\n   }\r\n   return (\r\n      <div>\r\n         <div className={p.profile}>\r\n\r\n            <div className={p.avatarBlock}>\r\n               <div className={p.profile__img}><img src={props.profile.photos.large || \"https://illumesense.com/resources/illumesense/style/img/website/profile-picture-blanks/male-profile.jpg\"} alt=\"\" /></div>\r\n\r\n               <div className={p.uploadAvatarBlock}>{props.isOwner ? <input className={p.uploadAvatar} type=\"file\" id=\"file\" onChange={onMainPhotoSelected} />\r\n                  : \"\"}\r\n                  {props.isOwner ? <label className={p.uploadAvatarLabel} htmlFor=\"file\" >Choose a file</label> : \"\"}\r\n\r\n               </div>\r\n\r\n            </div>\r\n\r\n            {!editMode\r\n               ? <ProfileData goToEditMode={() => setEditMode(true)} {...props} />\r\n               : <ProfileDataForm initialValues={props.profile} {...props} onSubmit={onSubmit} setEditMode={setEditMode} />}\r\n\r\n         </div>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n\r\n\r\n   return <div className={p.profileInfoBlock}>\r\n      <div className={p.profile_info}>\r\n         <div className={p.editNameFlex}>\r\n            <p className={p.profile_info__name}>{props.profile.fullName}</p>\r\n            {props.isOwner && <button className={p.editInfoBtn} onClick={props.goToEditMode}>Edit</button>}\r\n\r\n\r\n         </div>\r\n         <div><b>Status:</b><ProfileStatusWithHooks isOwner={props.isOwner} status={props.status} updateStatus={props.updateStatus} userId={props.profile.userId} /></div>\r\n         <div className={p.additionlaInfo_item}>\r\n            <b>Looking for a job:</b>{props.profile.lookingForAJob ? \" yes\" : \" no\"}\r\n         </div>\r\n         <div className={p.additionlaInfo_item}><b>My professional skills:</b> {props.profile.lookingForAJobDescription}</div>\r\n\r\n         <div className={p.additionlaInfo_item}><b>About Me:</b> {props.profile.aboutMe}</div>\r\n\r\n\r\n\r\n         {/* <b>Contacts:</b>{Object.keys(props.profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\r\n\r\n         })} */}\r\n      </div>\r\n\r\n   </div>\r\n}\r\n\r\n\r\n\r\nexport const Contact = ({ contactTitle, contactValue }) => {\r\n   return <div className={p.contacts_item} ><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\n\r\nexport default ProfileInfo","\r\nimport React from \"react\"\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n   return (\r\n      <div>\r\n         <ProfileInfo savePhoto={props.savePhoto}\r\n            isOwner={props.isOwner}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}\r\n            saveProfile={props.saveProfile}\r\n            profile={props.profile} />\r\n         <MyPostsContainer isOwner={props.isOwner} />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Profile from './Profile'\r\nimport withAuthRedirect from '../../HOC/withAuthRedirect'\r\nimport { setUserProfile, setProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator, savePhoto } from '../../redux/profile-reducer'\r\nimport { useParams } from 'react-router-dom';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { compose } from 'redux'\r\nimport { saveProfileThunkCreator } from '../../redux/profile-reducer'\r\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers'\r\n\r\n\r\nexport function withRouter(Children) {\r\n   return (props) => {\r\n\r\n      const match = { params: useParams() };\r\n      return <Children {...props} match={match} />\r\n   }\r\n}\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n   refreshProfile() {\r\n      let userId = this.props.match.params.userId\r\n\r\n      if (!userId) {\r\n         if (this.props.isAuth) {\r\n            console.log(this.props.authorizedUserId);\r\n            userId = this.props.authorizedUserId\r\n         }\r\n      }\r\n      this.props.setProfile(userId)\r\n      this.props.getStatus(userId)\r\n\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.refreshProfile()\r\n\r\n\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState, snapshot) {\r\n      if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n         this.refreshProfile()\r\n      }\r\n\r\n   }\r\n\r\n\r\n   render() {\r\n      return (\r\n         <Profile {...this.props}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            isOwner={!this.props.match.params.userId}\r\n            savePhoto={this.props.savePhoto}\r\n            saveProfile={this.props.saveProfile} />\r\n      )\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n   profile: state.profile.profile,\r\n   status: state.profile.status,\r\n   authorizedUserId: state.auth.userId,\r\n   isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {\r\n      setUserProfile,\r\n      setProfile: setProfileThunkCreator,\r\n      getStatus: getStatusThunkCreator,\r\n      updateStatus: updateStatusThunkCreator,\r\n      savePhoto: savePhoto,\r\n      saveProfile: saveProfileThunkCreator\r\n   }),\r\n   withRouter,\r\n   withAuthRedirect)(ProfileContainer)"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","Component","RedirectComponent","this","props","to","React","connect","className","p","src","alt","message","MyPostsReduxForm","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","postsElements","posts","map","post","i","profile","likesCount","likePost","isOwner","inputData","text","addPost","profileData","postsData","dispatch","addPostActionCreator","reset","MyPosts","stateWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","s","onBlur","updateStatus","onChange","e","currentTarget","value","autoFocus","type","onDoubleClick","createField","Input","userId","ProfileData","fullName","onClick","goToEditMode","lookingForAJob","lookingForAJobDescription","aboutMe","Preloader","photos","large","id","target","files","length","savePhoto","htmlFor","initialValues","formData","console","log","saveProfile","withRouter","Children","match","params","useParams","ProfileContainer","authorizedUserId","setProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","setUserProfile","setProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","saveProfileThunkCreator","withAuthRedirect"],"sourceRoot":""}