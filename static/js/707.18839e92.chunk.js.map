{"version":3,"file":"static/js/707.18839e92.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.js","webpack://react-ez-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://react-ez-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/MyProfileInfo/MyProfileInfoStatus/MyProfileInfoStatus.module.css","components/Profile/ProfileInfo/MyProfileInfo/MyProfileInfoStatus/MyProfileInfoStatus.jsx","components/Profile/ProfileInfo/MyProfileInfo/MyProfileInfoStatus/ProfileStatusWithHooks.jsx","webpack://react-ez-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileInfo/ProfileInfoContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\nconst withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n\r\n         if (!this.props.isAuth) {\r\n            return <Navigate to={\"/login\"} />\r\n         }\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n\r\n\r\n   let ConnectedAuthRedirectContainer = connect(mapStateToPropsForRedirect, null)(RedirectComponent)\r\n\r\n   return ConnectedAuthRedirectContainer\r\n\r\n}\r\n\r\nexport default withAuthRedirect","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__CT+s6\",\"post_img\":\"Post_post_img__W78YB\"};","import React from \"react\"\r\nimport p from \"./Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n   return (\r\n      <div className={p.post}>\r\n         <div className={p.post_img}><img src=\"https://images.assetsdelivery.com/compings_v2/triken/triken1608/triken160800029.jpg\" alt=\"\" /></div>\r\n         <div className={p.post_content}>{props.message}</div>\r\n         <div>Like</div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Post","// extracted by mini-css-extract-plugin\nexport default {\"content_posts\":\"MyPosts_content_posts__BM7po\",\"addPostBtn\":\"MyPosts_addPostBtn__vlSzT\",\"addPostInput\":\"MyPosts_addPostInput__ri0bL\",\"myPostsTitle\":\"MyPosts_myPostsTitle__qoHDh\",\"myPosts\":\"MyPosts_myPosts__ZewjP\",\"addPostForm\":\"MyPosts_addPostForm__8PiGK\",\"form-label\":\"MyPosts_form-label__39ykD\"};","\r\n\r\nimport React from 'react'\r\nimport Post from './Post/Post';\r\nimport p from \"./MyPosts.module.css\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { required, maxLengthCreator } from \"../../../util/validators/validators.js\"\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst MyPostsForm = (props) => {\r\n\r\n   return <div>\r\n      <form onSubmit={props.handleSubmit} className={p.addPostForm}>\r\n         <div>\r\n            <Field component={Textarea} placeholder=\"Your Message\" name='text' className={p.addPostInput} />\r\n         </div>\r\n         <div>\r\n            <button className={p.addPostBtn}>Post</button>\r\n         </div>\r\n      </form>\r\n   </div>\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({\r\n   form: \"posts\"\r\n})(MyPostsForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n   let postsElements = props.posts.map((post, i) => <Post key={i} message={post.message} likesCount={props.likesCount} likePost={props.likePost} />)\r\n\r\n   let AddPost = (text) => {\r\n      props.addPost(text)\r\n   }\r\n   const handleSubmit = (inputData) => {\r\n      AddPost(inputData.text)\r\n\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <div className={p.content_posts}>\r\n            <h2 className={p.myPostsTitle}>My posts</h2>\r\n            <MyPostsReduxForm onSubmit={handleSubmit} />\r\n            <br />\r\n            <div className={p.myPosts}>{postsElements}</div>\r\n\r\n         </div>\r\n      </div>\r\n   )\r\n})\r\n\r\nexport default MyPosts","import MyPosts from \"./MyPosts.jsx\";\r\nimport { addPostActionCreator, likePost, resetMessageActionCreator } from \"../../../redux/profile-reducer.js\";\r\nimport { connect } from 'react-redux'\r\nimport { reset } from 'redux-form';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      profileData: state.profile.profileData,\r\n      posts: state.profile.postsData\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (text) => {\r\n         dispatch(addPostActionCreator(text))\r\n         dispatch(reset('posts'))\r\n\r\n      },\r\n      // likePost: (messageId) => {\r\n      //    dispatch(likePost(messageId))\r\n      // }\r\n\r\n   }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\r\nimport s from \"./MyProfileInfoStatus.module.css\"\r\n\r\n\r\n\r\nclass MyProfileInfoStatus extends React.Component {\r\n   userId = this.props.userId\r\n\r\n   state = {\r\n      editMode: false,\r\n      status: this.props.status\r\n\r\n   }\r\n   toggleEditMode = () => {\r\n\r\n      if (this.userId == 25081) return { editMode: true }\r\n      else return { editMode: false }\r\n   }\r\n   activateEditMode = () => {\r\n      this.setState(this.toggleEditMode)\r\n   }\r\n\r\n   deactivateEditMode = () => {\r\n      this.setState({\r\n         editMode: false\r\n      })\r\n      this.props.updateStatus(this.state.status)\r\n   }\r\n\r\n   onStatusChange = (e) => {\r\n      this.setState({\r\n         status: e.currentTarget.value\r\n      })\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState) {\r\n      if (prevProps.status !== this.props.status) {\r\n         this.setState({\r\n            status: this.props.status\r\n         })\r\n      }\r\n\r\n\r\n   }\r\n\r\n   render() {\r\n      return <div className={s.status}>\r\n         {this.state.editMode &&\r\n            <div className={s.status_input}>\r\n               <span onBlur={this.deactivateEditMode}><input onChange={this.onStatusChange} autoFocus={true} value={this.state.status} type=\"text\" /></span>\r\n            </div>}\r\n         {!this.state.editMode &&\r\n            <div className={s.status_text}><span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span></div>}\r\n\r\n      </div>\r\n   }\r\n}\r\n\r\nexport default MyProfileInfoStatus","import React, { useEffect, useState } from \"react\";\r\nimport { setStatus } from \"../../../../../redux/profile-reducer\";\r\nimport s from \"./MyProfileInfoStatus.module.css\"\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n   let stateWithHooks = useState(false)\r\n\r\n   let [editMode, setEditMode] = stateWithHooks\r\n   let [status, setStatus] = useState(props.status)\r\n\r\n   useEffect(() => {\r\n      setStatus(props.status)\r\n   }, [props.status])\r\n\r\n   let activateEditMode = () => {\r\n      setEditMode(true)\r\n   }\r\n   let deactivateEditMode = () => {\r\n      setEditMode(false)\r\n      props.updateStatus(status)\r\n   }\r\n\r\n   let onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value)\r\n   }\r\n\r\n   return <div className={s.status}>\r\n      {editMode &&\r\n         <div onBlur={deactivateEditMode} className={s.status_input}>\r\n            <input onChange={onStatusChange} value={status} autoFocus={true} type=\"text\" />\r\n\r\n         </div>}\r\n      {!editMode &&\r\n         <div onDoubleClick={activateEditMode} className={s.status_text}><span>{props.status || \"------\"}</span></div>}\r\n\r\n   </div>\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks","// extracted by mini-css-extract-plugin\nexport default {\"profile_banner__img\":\"ProfileInfo_profile_banner__img__XgpPZ\",\"profile\":\"ProfileInfo_profile__IpKHk\",\"profile__img\":\"ProfileInfo_profile__img__O14XL\",\"profile_info__name\":\"ProfileInfo_profile_info__name__r61k9\",\"profile_info\":\"ProfileInfo_profile_info__3udvm\",\"profile_info__description\":\"ProfileInfo_profile_info__description__C7dLO\"};","import Preloader from \"../../common/Preloader/Preloader\"\r\nimport MyProfileInfoStatus from \"./MyProfileInfo/MyProfileInfoStatus/MyProfileInfoStatus\"\r\nimport ProfileStatusWithHooks from \"./MyProfileInfo/MyProfileInfoStatus/ProfileStatusWithHooks\"\r\nimport p from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileInfo = (props) => {\r\n   let profileData = props.profileData\r\n\r\n   if (!props.profile) {\r\n      return <Preloader className={p.preloader} />\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <div className={p.profile}>\r\n            <div className={p.profile__img}><img src={props.profile.photos.large ? props.profile.photos.large : \"https://illumesense.com/resources/illumesense/style/img/website/profile-picture-blanks/male-profile.jpg\"} alt=\"\" /></div>\r\n            <div className={p.profile_info}>\r\n               <div className={p.profile_info__name}>{props.profile.fullName}</div>\r\n               <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} userId={props.profile.userId} />\r\n               <div className={p.profile_info__description}>\r\n                  <p>Date of Birth: {profileData[1].birthday}</p>\r\n                  <p>City: {profileData[2].city}</p>\r\n                  <p>Education: {profileData[3].education}</p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default ProfileInfo","import { connect } from 'react-redux'\r\nimport ProfileInfo from './ProfileInfo'\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      profileData: state.profile.profileData,\r\n      profile: state.profile.profile,\r\n   }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n   }\r\n}\r\n\r\n\r\nconst ProfileInfoContainer = connect(mapStateToProps, mapDispatchToProps)(ProfileInfo)\r\n\r\n\r\nexport default ProfileInfoContainer","\r\nimport React from \"react\"\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfoContainer from \"./ProfileInfo/ProfileInfoContainer\"\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n   return (\r\n      <div>\r\n         <ProfileInfoContainer profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n         <MyPostsContainer />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Profile from './Profile'\r\nimport withAuthRedirect from '../../HOC/withAuthRedirect'\r\nimport { setUserProfile, setProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator } from '../../redux/profile-reducer'\r\nimport { useParams } from 'react-router-dom';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { compose } from 'redux'\r\n\r\n\r\nexport function withRouter(Children) {\r\n   return (props) => {\r\n\r\n      const match = { params: useParams() };\r\n      return <Children {...props} match={match} />\r\n   }\r\n}\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n   componentDidMount() {\r\n      let userId = this.props.match.params.userId\r\n\r\n      if (!userId) {\r\n         if (this.props.isAuth) {\r\n            userId = this.props.authorizedUserId\r\n         }\r\n      }\r\n      this.props.setProfile(userId)\r\n      this.props.getStatus(userId)\r\n\r\n\r\n   }\r\n\r\n\r\n   render() {\r\n      return (\r\n         <Profile {...this.props} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n      )\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n   status: state.profile.status,\r\n   authorizedUserId: state.auth.userId,\r\n   isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {\r\n      setUserProfile,\r\n      setProfile: setProfileThunkCreator,\r\n      getStatus: getStatusThunkCreator,\r\n      updateStatus: updateStatusThunkCreator\r\n   }),\r\n   withRouter,\r\n   withAuthRedirect)(ProfileContainer)"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","Component","RedirectComponent","this","props","to","React","connect","className","p","src","alt","message","MyPostsReduxForm","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","postsElements","posts","map","post","i","likesCount","likePost","inputData","text","addPost","profileData","profile","postsData","dispatch","addPostActionCreator","reset","MyPosts","stateWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","s","onBlur","updateStatus","onChange","e","currentTarget","value","autoFocus","type","onDoubleClick","photos","large","fullName","userId","birthday","city","education","Preloader","ProfileInfo","withRouter","Children","match","params","useParams","ProfileContainer","authorizedUserId","setProfile","getStatus","compose","setUserProfile","setProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","withAuthRedirect"],"sourceRoot":""}