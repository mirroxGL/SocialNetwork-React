{"version":3,"file":"static/js/672.e37d8e08.chunk.js","mappings":"yMAKIA,EAA6B,SAACC,GAAD,MAAY,CAC1CC,OAAQD,EAAME,KAAKD,OADW,EAwBjC,IAnByB,SAACE,GAAe,IAChCC,EAD+B,0IAElC,WAEG,OAAKC,KAAKC,MAAML,QAGT,SAACE,GAAD,UAAeE,KAAKC,SAFjB,SAAC,KAAD,CAAUC,GAAI,UAG1B,KARiC,GACLC,EAAAA,WAchC,OAFqCC,EAAAA,EAAAA,IAAQV,EAA4B,KAApCU,CAA0CL,EAIjF,C,kFC1BD,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAA8I,wBAA9I,EAAiL,0BAAjL,EAAqN,yBAArN,EAA0P,2BAA1P,EAAsS,gCAAtS,EAAwV,iC,mBCaxV,EAVmB,SAACE,GACjB,OACG,gBAAKI,UAAWC,EAAhB,UACG,SAAC,KAAD,CAASJ,GAAI,YAAcD,EAAMM,GAAjC,SAAsCN,EAAMO,QAIpD,ECAD,EAPgB,SAACP,GACd,OACG,gBAAKI,UAAWC,EAAhB,SAA4BL,EAAMQ,SAEvC,E,iDCCKC,GAAcC,EAAAA,EAAAA,GAAiB,IAa/BC,GAAmBC,EAAAA,EAAAA,GAAU,CAChCC,KAAM,eADgBD,EAZL,SAACZ,GAElB,OAAO,0BACJ,kBAAMc,SAAUd,EAAMe,aAAcX,UAAWC,EAA/C,WACG,SAACW,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,EAAUT,GAAcU,YAAY,kBAAkBZ,KAAK,UAAUa,UAAWC,EAAAA,GAAUjB,UAAWC,KACvH,0BAAK,mBAAQD,UAAWC,EAAnB,wBAGb,IA2CD,EAjCgB,SAACL,GAEd,IAAIsB,EAAkBtB,EAAMuB,QAAQC,KAAI,SAACC,EAAQC,GAAT,OAAe,SAAC,EAAD,CAAoBnB,KAAMkB,EAAOlB,KAAMD,GAAImB,EAAOnB,IAAjCoB,EAAhC,IACpCC,EAAmB3B,EAAM4B,SAASJ,KAAI,SAAChB,EAASkB,GAAV,OAAgB,SAAC,EAAD,CAAiBlB,QAASA,EAAQA,SAApBkB,EAA9B,IAU1C,OAAK1B,EAAML,QAMR,4BACG,iBAAKS,UAAWC,EAAhB,WACG,gBAAKD,UAAWC,EAAhB,SACIiB,KAEJ,gBAAKlB,UAAWC,EAAhB,SACIsB,QAGP,SAAChB,EAAD,CAAkBG,SAnBH,SAACe,GAJJ,IAACrB,IAKJqB,EAASrB,QAJrBR,EAAM8B,YAAYtB,EAMpB,QAES,SAAC,KAAD,CAAUP,GAAI,UAiB1B,E,wCC7BD,GAAe8B,EAAAA,EAAAA,KACZ5B,EAAAA,EAAAA,KAtBmB,SAACT,GACpB,MAAO,CACJsC,eAAgBtC,EAAM6B,QAAQS,eAC9BT,QAAS7B,EAAM6B,QAAQU,YACvBL,SAAUlC,EAAM6B,QAAQW,aAE7B,IACwB,SAACC,GACvB,MAAO,CACJL,YAAa,SAACtB,GACX2B,GAASC,EAAAA,EAAAA,IAAyB5B,IAClC2B,GAASE,EAAAA,EAAAA,IAAM,eAEjB,EAEN,IAQEC,EAAAA,EAFH,CAEqBC,E","sources":["HOC/withAuthRedirect.js","webpack://react-ez-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\nconst withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n\r\n         if (!this.props.isAuth) {\r\n            return <Navigate to={\"/login\"} />\r\n         }\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n\r\n\r\n   let ConnectedAuthRedirectContainer = connect(mapStateToPropsForRedirect, null)(RedirectComponent)\r\n\r\n   return ConnectedAuthRedirectContainer\r\n\r\n}\r\n\r\nexport default withAuthRedirect","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__SWpC5\",\"dialogsItems\":\"Dialogs_dialogsItems__ZZcGG\",\"selected\":\"Dialogs_selected__BLq97\",\"dialog\":\"Dialogs_dialog__bEX6g\",\"messages\":\"Dialogs_messages__NG53o\",\"message\":\"Dialogs_message__IT05v\",\"textInput\":\"Dialogs_textInput__bZSxe\",\"sendMessageBtn\":\"Dialogs_sendMessageBtn__Mc2va\",\"sendMessageForm\":\"Dialogs_sendMessageForm__HZt1m\",\"form-label\":\"Dialogs_form-label__TlxqL\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport d from \"./../Dialogs.module.css\"\r\n\r\nconst DialogItem = (props) => {\r\n   return (\r\n      <div className={d.dialog}>\r\n         <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n      </div>\r\n   )\r\n\r\n}\r\n\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport d from \"./../Dialogs.module.css\"\r\n\r\nconst Message = (props) => {\r\n   return (\r\n      <div className={d.message}>{props.message}</div>\r\n   )\r\n}\r\n\r\n\r\nexport default Message","import React from \"react\";\r\nimport d from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { required, maxLengthCreator } from \"../../util/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst DialogsForm = (props) => {\r\n\r\n   return <div>\r\n      <form onSubmit={props.handleSubmit} className={d.sendMessageForm}>\r\n         <Field validate={[required, maxLength50]} placeholder=\"Your message...\" name=\"message\" component={Textarea} className={d.textInput} />\r\n         <div><button className={d.sendMessageBtn}>Send</button></div>\r\n      </form>\r\n   </div>\r\n}\r\n\r\n\r\n\r\nconst DialogsReduxForm = reduxForm({\r\n   form: \"dialogsForm\"\r\n})(DialogsForm)\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n   let dialogsElements = props.dialogs.map((dialog, i) => <DialogItem key={i} name={dialog.name} id={dialog.id} />)\r\n   let messagesElements = props.messages.map((message, i) => <Message key={i} message={message.message} />)\r\n\r\n   let sendMessage = (message) => {\r\n      props.sendMessage(message)\r\n\r\n   }\r\n   const handleSubmit = (formData) => {\r\n      sendMessage(formData.message);\r\n\r\n   }\r\n   if (!props.isAuth) {\r\n      return <Navigate to={\"/login\"} />\r\n   }\r\n\r\n\r\n   return (\r\n      <div>\r\n         <div className={d.dialogs}>\r\n            <div className={d.dialogsItems}>\r\n               {dialogsElements}\r\n            </div>\r\n            <div className={d.messages}>\r\n               {messagesElements}\r\n            </div>\r\n         </div>\r\n         <DialogsReduxForm onSubmit={handleSubmit} />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Dialogs\r\n\r\n","import { sendMessageActionCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\";\r\nimport { connect } from 'react-redux'\r\nimport { compose } from \"redux\";\r\nimport { reset } from \"redux-form\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      newMessageText: state.dialogs.newMessageText,\r\n      dialogs: state.dialogs.dialogsData,\r\n      messages: state.dialogs.messagesData,\r\n   }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      sendMessage: (message) => {\r\n         dispatch(sendMessageActionCreator(message))\r\n         dispatch(reset('dialogsForm'))\r\n\r\n      }\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect)(Dialogs)\r\n"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","Component","RedirectComponent","this","props","to","React","connect","className","d","id","name","message","maxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","placeholder","component","Textarea","dialogsElements","dialogs","map","dialog","i","messagesElements","messages","formData","sendMessage","compose","newMessageText","dialogsData","messagesData","dispatch","sendMessageActionCreator","reset","withAuthRedirect","Dialogs"],"sourceRoot":""}